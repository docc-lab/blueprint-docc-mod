// fancy_greeter_1_proc runs the fancy_greeter_1_proc Golang process.
//
// fancy_greeter_1_proc is auto-generated by Blueprint's goproc plugin (goproc/goprocgen/main.go.go)
//
// Usage:
//
//   go run main.go --basic_greeter.grpc.dial_addr=value --zipkin.dial_addr=value --fancy_greeter_1.http.bind_addr=value 
//
// fancy_greeter_1_proc requires the following arguments are passed:
//
//   --basic_greeter.grpc.dial_addr
//       Auto-generated by Blueprint IR node:
//       basic_greeter.grpc.dial_addr = AddressConfig()
//
//   --zipkin.dial_addr
//       Auto-generated by Blueprint IR node:
//       zipkin.dial_addr = AddressConfig()
//
//   --fancy_greeter_1.http.bind_addr
//       Auto-generated by Blueprint IR node:
//       fancy_greeter_1.http.bind_addr = AddressConfig()
//
// fancy_greeter_1_proc will instantiate the following IR nodes:
//   fancy_greeter_1_proc.stdoutmetriccollector
//   fancy_greeter_1_proc.logger
//   basic_greeter.clientpool
//   basic_greeter.client.retrier
//   fancy_greeter_1
//   zipkin.client
//   fancy_greeter_1.server.ot
//   fancy_greeter_1.http_server
package main

import (
	"context"
	"os"

	"log/slog"
)

func main() {
	slog.Info("Running fancy_greeter_1_proc")
	n, err := New_fancy_greeter_1_proc("fancy_greeter_1_proc").Build(context.Background())
	if err != nil {
		slog.Error(err.Error())
		os.Exit(1)
	}
	n.Await()
	slog.Info("fancy_greeter_1_proc exiting")
}