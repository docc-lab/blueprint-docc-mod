// Blueprint: Auto-generated by OT Plugin
package ot

import (
	"context"
	"github.com/blueprint-uservices/blueprint/runtime/core/backend"
)

type GreeterService_OTClientWrapperInterface interface {
	SayGoodbye(ctx context.Context, name string) (string, error)
	SayHello(ctx context.Context, name string) (string, error)
	
}

type GreeterService_OTClientWrapper struct {
	Client GreeterService_OTServerWrapperInterface
	CollClient backend.Tracer
}

func New_GreeterService_OTClientWrapper(ctx context.Context, client GreeterService_OTServerWrapperInterface, coll_client backend.Tracer) (*GreeterService_OTClientWrapper, error) {
	handler := &GreeterService_OTClientWrapper{}
	handler.Client = client
	handler.CollClient = coll_client
	return handler, nil
}


func (handler *GreeterService_OTClientWrapper) SayGoodbye(ctx context.Context, name string) (ret0 string, err error) {
	tp, _ := handler.CollClient.GetTracerProvider(ctx)
	tr := tp.Tracer("GreeterService_OTServerWrapperInterface")
	ctx, span := tr.Start(ctx, "GreeterServiceClient_SayGoodbye")
	defer span.End()
	trace_ctx, _ := span.SpanContext().MarshalJSON()
	ret0, err = handler.Client.SayGoodbye(ctx, name, string(trace_ctx))
	if err != nil {
		span.RecordError(err)
	}
	return
}

func (handler *GreeterService_OTClientWrapper) SayHello(ctx context.Context, name string) (ret0 string, err error) {
	tp, _ := handler.CollClient.GetTracerProvider(ctx)
	tr := tp.Tracer("GreeterService_OTServerWrapperInterface")
	ctx, span := tr.Start(ctx, "GreeterServiceClient_SayHello")
	defer span.End()
	trace_ctx, _ := span.SpanContext().MarshalJSON()
	ret0, err = handler.Client.SayHello(ctx, name, string(trace_ctx))
	if err != nil {
		span.RecordError(err)
	}
	return
}

