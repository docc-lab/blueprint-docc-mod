// shipping_proc runs the shipping_proc Golang process.
//
// shipping_proc is auto-generated by Blueprint's goproc plugin (goproc/goprocgen/main.go.go)
//
// Usage:
//
//   go run main.go --shipping_db.dial_addr=value --shipping_service.grpc.bind_addr=value --shipping_service.grpc.dial_addr=value 
//
// shipping_proc requires the following arguments are passed:
//
//   --shipping_db.dial_addr
//       Auto-generated by Blueprint IR node:
//       shipping_db.dial_addr = AddressConfig()
//
//   --shipping_service.grpc.bind_addr
//       Auto-generated by Blueprint IR node:
//       shipping_service.grpc.bind_addr = AddressConfig()
//
//   --shipping_service.grpc.dial_addr
//       Auto-generated by Blueprint IR node:
//       shipping_service.grpc.dial_addr = AddressConfig()
//
// shipping_proc will instantiate the following IR nodes:
//   shipping_proc.stdoutmetriccollector
//   shipping_proc.logger
//   shipping_queue
//   shipping_db.client
//   shipping_service
//   tracing_agent.ctr
//   tracing_agent
//   shipping_service.server.ot
//   shipping_service.grpc_server
//   shipping_service.clientpool
//   shipping_service.client.retrier
//   shipping_service.client
//   queue_master
package main

import (
	"context"
	"os"

	"log/slog"
)

func main() {
	slog.Info("Running shipping_proc")
	n, err := New_shipping_proc("shipping_proc").Build(context.Background())
	if err != nil {
		slog.Error(err.Error())
		os.Exit(1)
	}
	n.Await()
	slog.Info("shipping_proc exiting")
}