// This file is auto-generated by the Blueprint clientpool plugin
package pool

import (
	"context"
	"fmt"
	"github.com/blueprint-uservices/blueprint/runtime/plugins/clientpool"
	"github.com/blueprint-uservices/blueprint/runtime/plugins/golang"
	"blueprint/goproc/order_proc/ot"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/payment"
)

type PaymentService_OTClientWrapperInterface_ClientPool struct {
	clients *clientpool.ClientPool[ot.PaymentService_OTClientWrapperInterface]
}

func New_PaymentService_Pool(parent *golang.Namespace) *PaymentService_OTClientWrapperInterface_ClientPool {
	i := 0
	createClient := func() (ot.PaymentService_OTClientWrapperInterface, error) {
		clientName := fmt.Sprintf("payment_service.clientpool.%v", i)
		n, err := New_PaymentService_PoolClient(clientName).BuildWithParent(parent)
		if err != nil {
			return nil, err
		}
		i++
		var client ot.PaymentService_OTClientWrapperInterface
		err = n.Get("payment_service.client.ot", &client)
		return client, err
	}
	clients := clientpool.NewClientPool(10, createClient)
	return &PaymentService_OTClientWrapperInterface_ClientPool{clients: clients}
}


func (pool *PaymentService_OTClientWrapperInterface_ClientPool) Authorise(ctx context.Context, amount float32) (ret0 payment.Authorisation, err error) {
	client, err := pool.clients.Pop(ctx)
	if err != nil {
		return
	}
	defer pool.clients.Push(client)
	return client.Authorise(ctx, amount)
}



