// This file is auto-generated by the Blueprint clientpool plugin
package pool

import (
	"fmt"
	"github.com/blueprint-uservices/blueprint/runtime/plugins/clientpool"
	"github.com/blueprint-uservices/blueprint/runtime/plugins/golang"
	"blueprint/testclients/ot"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/order"
	"context"
)

type OrderService_OTClientWrapperInterface_ClientPool struct {
	clients *clientpool.ClientPool[ot.OrderService_OTClientWrapperInterface]
}

func New_OrderService_Pool(parent *golang.Namespace) *OrderService_OTClientWrapperInterface_ClientPool {
	i := 0
	createClient := func() (ot.OrderService_OTClientWrapperInterface, error) {
		clientName := fmt.Sprintf("order_service.clientpool.%v", i)
		n, err := New_OrderService_PoolClient(clientName).BuildWithParent(parent)
		if err != nil {
			return nil, err
		}
		i++
		var client ot.OrderService_OTClientWrapperInterface
		err = n.Get("order_service.client.ot", &client)
		return client, err
	}
	clients := clientpool.NewClientPool(10, createClient)
	return &OrderService_OTClientWrapperInterface_ClientPool{clients: clients}
}


func (pool *OrderService_OTClientWrapperInterface_ClientPool) GetOrder(ctx context.Context, orderID string) (ret0 order.Order, err error) {
	client, err := pool.clients.Pop(ctx)
	if err != nil {
		return
	}
	defer pool.clients.Push(client)
	return client.GetOrder(ctx, orderID)
}

func (pool *OrderService_OTClientWrapperInterface_ClientPool) GetOrders(ctx context.Context, customerID string) (ret0 []order.Order, err error) {
	client, err := pool.clients.Pop(ctx)
	if err != nil {
		return
	}
	defer pool.clients.Push(client)
	return client.GetOrders(ctx, customerID)
}

func (pool *OrderService_OTClientWrapperInterface_ClientPool) NewOrder(ctx context.Context, customerID string, addressID string, cardID string, cartID string) (ret0 order.Order, err error) {
	client, err := pool.clients.Pop(ctx)
	if err != nil {
		return
	}
	defer pool.clients.Push(client)
	return client.NewOrder(ctx, customerID, addressID, cardID, cartID)
}



