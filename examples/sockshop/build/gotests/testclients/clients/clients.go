// Package clients is auto-generated by gogen/namespacebuilder.go
//
// It provides funcs for instantiating the clients namespace.
//
// To instantiate the clients namespace, first call [NewClientLibrary] and then either call 
// [Build] or [BuildWithParent].
// 
// See [golang.NamespaceBuilder] docs for more information about the behavior of [Build]
package clients

import (
	"github.com/blueprint-uservices/blueprint/runtime/plugins/golang"
	"blueprint/testclients/pool"
	"blueprint/testclients/retries"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/payment"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/cart"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/shipping"
	"blueprint/testclients/ot"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/user"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/order"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/catalogue"
	"github.com/blueprint-uservices/blueprint/examples/sockshop/workflow/frontend"
)

// Initializes the clients namespace by defining all of the nodes that run
// within the namespace.
//
// [Build] or [BuildWithParent] must be called on the return value of this func
// to actually build and run the nodes in the namespace.
func NewClientLibrary(name string) *golang.NamespaceBuilder {
	b := golang.NewNamespaceBuilder(name)
	set_clients_Args(b)
	set_clients_Instances(b)
	set_clients_Definitions(b)
	return b
}

// clients requires that its arguments are either:
//  - explicitly set with [golang.NamespaceBuilder.Set]
//  - passed on the command line (if built using [golang.NamespaceBuilder.Build])
//  - are defined in parent (if built using [golang.NamespaceBuilder.BuildWithParent])
//
// The following arguments will be eagerly checked and building the namespace
// will fail if they haven't been provided:
//
// The following arguments are optional and a failure will only occur if the client
// tries to build a node that needs the argument to be set
//   cart_service.grpc.dial_addr
//   catalogue_service.grpc.dial_addr
//   frontend.http.dial_addr
//   order_service.grpc.dial_addr
//   payment_service.grpc.dial_addr
//   shipping_service.grpc.dial_addr
//   user_service.grpc.dial_addr
func set_clients_Args(b *golang.NamespaceBuilder) {
	b.Optional("cart_service.grpc.dial_addr", "Argument generated by Blueprint IR: cart_service.grpc.dial_addr = AddressConfig()")
	b.Optional("catalogue_service.grpc.dial_addr", "Argument generated by Blueprint IR: catalogue_service.grpc.dial_addr = AddressConfig()")
	b.Optional("frontend.http.dial_addr", "Argument generated by Blueprint IR: frontend.http.dial_addr = AddressConfig()")
	b.Optional("order_service.grpc.dial_addr", "Argument generated by Blueprint IR: order_service.grpc.dial_addr = AddressConfig()")
	b.Optional("payment_service.grpc.dial_addr", "Argument generated by Blueprint IR: payment_service.grpc.dial_addr = AddressConfig()")
	b.Optional("shipping_service.grpc.dial_addr", "Argument generated by Blueprint IR: shipping_service.grpc.dial_addr = AddressConfig()")
	b.Optional("user_service.grpc.dial_addr", "Argument generated by Blueprint IR: user_service.grpc.dial_addr = AddressConfig()")
}

// When the clients namespace is built it will automatically instantiate
// the following nodes:
func set_clients_Instances(b *golang.NamespaceBuilder) {
}

// The clients namespace contains definitions for instantiating
// the following nodes:
//   cart_service.client
//   cart_service.client.retrier
//   cart_service.clientpool
//   catalogue_service.client
//   catalogue_service.client.retrier
//   catalogue_service.clientpool
//   frontend.client
//   frontend.client.retrier
//   frontend.clientpool
//   order_service.client
//   order_service.client.retrier
//   order_service.clientpool
//   payment_service.client
//   payment_service.client.retrier
//   payment_service.clientpool
//   shipping_service.client
//   shipping_service.client.retrier
//   shipping_service.clientpool
//   user_service.client
//   user_service.client.retrier
//   user_service.clientpool
func set_clients_Definitions(b *golang.NamespaceBuilder) {
	b.Define("cart_service.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client cart.CartService
		err := n.Get("cart_service.client.retrier", &client)
		return client, err
	})
	
	b.Define("cart_service.client.retrier", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var client ot.CartService_OTClientWrapperInterface
		if err := n.Get("cart_service.clientpool", &client); err != nil {
			return nil, err
		}
		
		return retries.New_CartService_RetrierClient(n.Context(), client)
	})
	
	b.Define("cart_service.clientpool", func(n *golang.Namespace) (any, error) {
		return pool.New_CartService_Pool(n), nil
	})
	
	b.Define("catalogue_service.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client catalogue.CatalogueService
		err := n.Get("catalogue_service.client.retrier", &client)
		return client, err
	})
	
	b.Define("catalogue_service.client.retrier", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var client ot.CatalogueService_OTClientWrapperInterface
		if err := n.Get("catalogue_service.clientpool", &client); err != nil {
			return nil, err
		}
		
		return retries.New_CatalogueService_RetrierClient(n.Context(), client)
	})
	
	b.Define("catalogue_service.clientpool", func(n *golang.Namespace) (any, error) {
		return pool.New_CatalogueService_Pool(n), nil
	})
	
	b.Define("frontend.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client frontend.Frontend
		err := n.Get("frontend.client.retrier", &client)
		return client, err
	})
	
	b.Define("frontend.client.retrier", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var client ot.Frontend_OTClientWrapperInterface
		if err := n.Get("frontend.clientpool", &client); err != nil {
			return nil, err
		}
		
		return retries.New_Frontend_RetrierClient(n.Context(), client)
	})
	
	b.Define("frontend.clientpool", func(n *golang.Namespace) (any, error) {
		return pool.New_Frontend_Pool(n), nil
	})
	
	b.Define("order_service.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client order.OrderService
		err := n.Get("order_service.client.retrier", &client)
		return client, err
	})
	
	b.Define("order_service.client.retrier", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var client ot.OrderService_OTClientWrapperInterface
		if err := n.Get("order_service.clientpool", &client); err != nil {
			return nil, err
		}
		
		return retries.New_OrderService_RetrierClient(n.Context(), client)
	})
	
	b.Define("order_service.clientpool", func(n *golang.Namespace) (any, error) {
		return pool.New_OrderService_Pool(n), nil
	})
	
	b.Define("payment_service.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client payment.PaymentService
		err := n.Get("payment_service.client.retrier", &client)
		return client, err
	})
	
	b.Define("payment_service.client.retrier", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var client ot.PaymentService_OTClientWrapperInterface
		if err := n.Get("payment_service.clientpool", &client); err != nil {
			return nil, err
		}
		
		return retries.New_PaymentService_RetrierClient(n.Context(), client)
	})
	
	b.Define("payment_service.clientpool", func(n *golang.Namespace) (any, error) {
		return pool.New_PaymentService_Pool(n), nil
	})
	
	b.Define("shipping_service.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client shipping.ShippingService
		err := n.Get("shipping_service.client.retrier", &client)
		return client, err
	})
	
	b.Define("shipping_service.client.retrier", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var client ot.ShippingService_OTClientWrapperInterface
		if err := n.Get("shipping_service.clientpool", &client); err != nil {
			return nil, err
		}
		
		return retries.New_ShippingService_RetrierClient(n.Context(), client)
	})
	
	b.Define("shipping_service.clientpool", func(n *golang.Namespace) (any, error) {
		return pool.New_ShippingService_Pool(n), nil
	})
	
	b.Define("user_service.client", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin workflow/ir_workflowservice.go
		var client user.UserService
		err := n.Get("user_service.client.retrier", &client)
		return client, err
	})
	
	b.Define("user_service.client.retrier", func(n *golang.Namespace) (any, error) {
		// Auto-generated by the golang plugin gogen/namespacebuilder.go
		var client ot.UserService_OTClientWrapperInterface
		if err := n.Get("user_service.clientpool", &client); err != nil {
			return nil, err
		}
		
		return retries.New_UserService_RetrierClient(n.Context(), client)
	})
	
	b.Define("user_service.clientpool", func(n *golang.Namespace) (any, error) {
		return pool.New_UserService_Pool(n), nil
	})
	
}
