// fancier_greeter_2_proc runs the fancier_greeter_2_proc Golang process.
//
// fancier_greeter_2_proc is auto-generated by Blueprint's goproc plugin (goproc/goprocgen/main.go.go)
//
// Usage:
//
//   go run main.go --fancier_greeter_2__basic_greeter.grpc.dial_addr=value --zipkin.dial_addr=value --fancier_greeter_2.http.bind_addr=value 
//
// fancier_greeter_2_proc requires the following arguments are passed:
//
//   --fancier_greeter_2__basic_greeter.grpc.dial_addr
//       Auto-generated by Blueprint IR node:
//       fancier_greeter_2__basic_greeter.grpc.dial_addr = AddressConfig()
//
//   --zipkin.dial_addr
//       Auto-generated by Blueprint IR node:
//       zipkin.dial_addr = AddressConfig()
//
//   --fancier_greeter_2.http.bind_addr
//       Auto-generated by Blueprint IR node:
//       fancier_greeter_2.http.bind_addr = AddressConfig()
//
// fancier_greeter_2_proc will instantiate the following IR nodes:
//   fancier_greeter_2_proc.stdoutmetriccollector
//   fancier_greeter_2_proc.logger
//   fancier_greeter_2__basic_greeter.clientpool
//   fancier_greeter_2__basic_greeter.client.retrier
//   fancier_greeter_2
//   zipkin.client
//   fancier_greeter_2.server.ot
//   fancier_greeter_2.http_server
package main

import (
	"context"
	"os"

	"log/slog"
)

func main() {
	slog.Info("Running fancier_greeter_2_proc")
	n, err := New_fancier_greeter_2_proc("fancier_greeter_2_proc").Build(context.Background())
	if err != nil {
		slog.Error(err.Error())
		os.Exit(1)
	}
	n.Await()
	slog.Info("fancier_greeter_2_proc exiting")
}